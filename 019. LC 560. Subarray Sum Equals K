class Solution {
public:
//
    int subarraySum(vector<int>& nums, int k) {
       ios_base::sync_with_stdio(false);
       cin.tie(NULL);

       int n=nums.size();
       if(n==0)
       return 0;

       unordered_map<int,int> mp;

       int currSum=0;
       int i=0;
       int count=0;

       while(i<n)
       {
           currSum+=nums[i];

           if(currSum==k)//if we find a new subarray with sum k
           count+=1;

           if(mp.find(currSum-k)!=mp.end())
           count+=mp[currSum-k];

           mp[currSum]+=1;
           i+=1;


       }

       return count;
    }
};
